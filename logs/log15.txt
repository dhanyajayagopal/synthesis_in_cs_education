2021-02-26 11:41:32.648200,page-change,1,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-02-26 11:41:56.308081,search,move-left,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-02-26 11:41:58.936846,search,move-right,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-02-26 11:42:01.140014,search,move-right,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-02-26 11:42:02.463812,search,return-true,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    return False', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-02-26 11:42:28.808217,search,return-false,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    return False', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-02-26 11:42:47.283095,search,move-left,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    return False', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-02-26 11:42:48.169088,search,move-right,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    return False', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-02-26 11:42:48.962521,search,move-left,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    return False', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-02-26 11:42:50.012645,search,return-false,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    return False', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-02-26 11:42:58.113468,search,move-right,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    return False', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-02-26 11:43:04.035232,search,move-left,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    return False', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-02-26 11:43:05.025197,search,move-right,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    return False', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-02-26 11:43:08.505096,search,return-false,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    return False', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-02-26 11:43:12.677506,search,move-right,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    return False', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-02-26 11:43:13.092484,search,move-left,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    return False', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-02-26 11:43:13.994374,search,move-right,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    return False', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-02-26 11:43:30.259754,search,return-true,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    return False', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-02-26 11:47:33.866131,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    value = root.val\n    if key == value:\n        return True\n    if value == None:\n        return False\n    if key > value:\n        value = root.left\n        return search(value, key)\n    if key < value:\n        value = root.right\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-02-26 11:47:46.549494,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    value = root.val\n    if key == value:\n        return True\n    if value == None:\n        return False\n    if key > value:\n        value = root.left\n        return search(value, key)\n    if key < value:\n        value = root.right\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-02-26 11:49:08.109421,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    value = root.val\n    if key == value:\n        return True\n    if value == None:\n        return False\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-02-26 11:49:19.898709,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    value = root.val\n    if key == value:\n        return True\n    if value == None:\n        return False\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-02-26 11:49:24.726009,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    value = root.val\n    if key == value:\n        return True\n    if value == None:\n        return False\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-02-26 11:49:44.519481,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-02-26 11:49:51.516883,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-02-26 11:49:53.496447,search,check-correct,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-02-26 11:49:57.918596,page-change,2,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-02-26 11:50:53.049368,page-change,1,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-02-26 11:50:59.692496,page-change,2,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-02-26 11:51:38.190595,insert,move-left,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n\n    return root\n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {}}}
2021-02-26 11:51:40.805935,insert,move-right,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n\n    return root\n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {}}}
2021-02-26 11:51:42.782753,insert,move-right,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n\n    return root\n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {}}}
2021-02-26 11:51:43.949923,insert,insert,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n\n    return root\n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}]}}}
2021-02-26 11:51:49.630739,insert,move-left,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n\n    return root\n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}]}}}
2021-02-26 11:51:50.074216,insert,move-left,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n\n    return root\n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}]}}}
2021-02-26 11:51:51.618375,insert,move-right,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n\n    return root\n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}]}}}
2021-02-26 11:51:52.939047,insert,insert,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n\n    return root\n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}]}}}
2021-02-26 11:52:00.021040,insert,move-right,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n\n    return root\n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}]}}}
2021-02-26 11:52:01.051468,insert,move-left,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n\n    return root\n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}]}}}
2021-02-26 11:52:01.990218,insert,insert,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n\n    return root\n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}]}}}
2021-02-26 11:52:12.887911,insert,move-left,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n\n    return root\n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}]}}}
2021-02-26 11:52:13.325420,insert,move-left,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n\n    return root\n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}]}}}
2021-02-26 11:52:14.106699,insert,move-left,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n\n    return root\n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}]}}}
2021-02-26 11:52:15.759880,insert,insert,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n\n    return root\n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}]}}}
2021-02-26 11:59:40.522880,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    if root == None:\n        value = root.val\n        if key > val:\n            root.right = key\n            return root\n        if key < val:\n            root.left = key\n            return root\n    value = root.val\n    if key > val:\n        value = root.right\n        return insert(value, key)\n    if key < value:\n        value = root.left\n        return insert(value, key)\n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}]}}}
2021-02-26 11:59:46.814634,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    if root == None:\n        value = root.val\n        if key > val:\n            root.right = key\n            return root\n        if key < val:\n            root.left = key\n            return root\n    value = root.val\n    if key > val:\n        value = root.right\n        return insert(value, key)\n    if key < value:\n        value = root.left\n        return insert(value, key)\n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}]}}}
2021-02-26 11:59:53.435007,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    if root == None:\n        value = root.val\n        if key > val:\n            root.right = key\n            return root\n        if key < val:\n            root.left = key\n            return root\n    value = root.val\n    if key > value:\n        value = root.right\n        return insert(value, key)\n    if key < value:\n        value = root.left\n        return insert(value, key)\n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}]}}}
2021-02-26 12:00:23.272519,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    if root.left == None or root.right == None:\n        value = root.val\n        if key > val:\n            root.right = key\n            return root\n        if key < val:\n            root.left = key\n            return root\n    value = root.val\n    if key > value:\n        value = root.right\n        return insert(value, key)\n    if key < value:\n        value = root.left\n        return insert(value, key)\n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}]}}}
2021-02-26 12:00:32.330625,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    if root.left == None or root.right == None:\n        value = root.val\n        if key > value:\n            root.right = key\n            return root\n        if key < value:\n            root.left = key\n            return root\n    value = root.val\n    if key > value:\n        value = root.right\n        return insert(value, key)\n    if key < value:\n        value = root.left\n        return insert(value, key)\n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}]}}}
2021-02-26 12:02:05.477803,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    if root.left == None or root.right == None:\n        value = root.val\n        if key > value:\n            root.right = key\n            return root\n        if key < value:\n            root.left = key\n            return root\n    value = root.val\n    if key > value:\n        value = root.right\n        return insert(value, key)\n    if key < value:\n        value = root.left\n        return insert(value, key)\n    return root\n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}]}}}
2021-02-26 12:02:06.436285,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    if root.left == None or root.right == None:\n        value = root.val\n        if key > value:\n            root.right = key\n            return root\n        if key < value:\n            root.left = key\n            return root\n    value = root.val\n    if key > value:\n        value = root.right\n        return insert(value, key)\n    if key < value:\n        value = root.left\n        return insert(value, key)\n    return root\n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}]}}}
2021-02-26 12:02:11.721852,insert,check-correct,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    if root.left == None or root.right == None:\n        value = root.val\n        if key > value:\n            root.right = key\n            return root\n        if key < value:\n            root.left = key\n            return root\n    value = root.val\n    if key > value:\n        value = root.right\n        return insert(value, key)\n    if key < value:\n        value = root.left\n        return insert(value, key)\n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}]}}}
2021-02-26 12:02:41.837905,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    if root.left == None or root.right == None:\n        value = root.val\n        if key > value:\n            root.right = key\n            return root\n        if key < value:\n            root.left = key\n            return root\n    value = root.val\n    if key > value:\n        value = root.right\n        return insert(value, key)\n    if key < value:\n        value = root.left\n        return insert(value, key)\n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}]}}}
2021-02-26 12:03:12.261670,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    if root.left == None or root.right == None:\n        value = root.val\n        if key > value:\n            root.right = Node(key)\n            return root\n        if key < value:\n            root.left = Node(key)\n            return root\n    value = root.val\n    if key > value:\n        value = root.right\n        return insert(value, key)\n    if key < value:\n        value = root.left\n        return insert(value, key)\n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}]}}}
2021-02-26 12:03:51.820343,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    if root.left == None or root.right == None:\n        value = root.val\n        if key > value:\n            root.right = Node(key)\n            return root\n        if key < value:\n            root.left = Node(key)\n            return root\n    value = root.val\n    if key > value:\n        value = root.right\n        return insert(value, key)\n    if key < value:\n        value = root.left\n        return insert(value, key)\n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}]}}}
2021-02-26 12:05:04.017098,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    if root.left == None or root.right == None:\n        value = root.val\n        if key > value:\n            root.right = Node(key)\n            return root\n        if key < value:\n            root.left = Node(key)\n            return root\n    value = root.val\n    if key > value:\n        value = root.right\n        return Node(root, insert(value, key))\n    if key < value:\n        value = root.left\n        return Node(root, insert(value, key))\n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}]}}}
2021-02-26 12:05:53.660260,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    if root.left == None or root.right == None:\n        value = root.val\n        if key > value:\n            root.right = Node(key)\n            return root\n        if key < value:\n            root.left = Node(key)\n            return root\n    value = root.val\n    if key > value:\n        value = root.right\n        return insert(value, key)\n    if key < value:\n        value = root.left\n        return insert(value, key)\n    \n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}]}}}
2021-02-26 12:06:00.113322,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    if root.left == None or root.right == None:\n        value = root.val\n        if key > value:\n            root.right = Node(key)\n            return root\n        if key < value:\n            root.left = Node(key)\n            return root\n    value = root.val\n    if key > value:\n        value = root.right\n        return insert(value, key)\n    if key < value:\n        value = root.left\n        return insert(value, key)\n    \n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}]}}}
2021-02-26 12:06:06.898454,insert,check-correct,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    if root.left == None or root.right == None:\n        value = root.val\n        if key > value:\n            root.right = Node(key)\n            return root\n        if key < value:\n            root.left = Node(key)\n            return root\n    value = root.val\n    if key > value:\n        value = root.right\n        return insert(value, key)\n    if key < value:\n        value = root.left\n        return insert(value, key)\n    \n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}]}}}
2021-02-26 12:06:09.587069,insert,check-correct,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    if root.left == None or root.right == None:\n        value = root.val\n        if key > value:\n            root.right = Node(key)\n            return root\n        if key < value:\n            root.left = Node(key)\n            return root\n    value = root.val\n    if key > value:\n        value = root.right\n        return insert(value, key)\n    if key < value:\n        value = root.left\n        return insert(value, key)\n    \n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}]}}}
2021-02-26 12:06:50.938488,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    if root.left == None or root.right == None:\n        value = root.val\n        if key > value:\n            root.right = Node(key)\n            return root\n        if key < value:\n            root.left = Node(key)\n            return root\n    value = root.val\n    if key > value:\n        value = root.right\n        value.right = insert(value, key)\n    if key < value:\n        value = root.left\n        value.left = insert(value, key)\n    \n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}]}}}
2021-02-26 12:07:00.420200,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    if root.left == None or root.right == None:\n        value = root.val\n        if key > value:\n            root.right = Node(key)\n            return root\n        if key < value:\n            root.left = Node(key)\n            return root\n    value = root.val\n    if key > value:\n        value = root.right\n        value = insert(value, key)\n    if key < value:\n        value = root.left\n        value = insert(value, key)\n    \n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}]}}}
2021-02-26 12:07:42.626210,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    if root.left == None or root.right == None:\n        value = root.val\n        if key > value:\n            root.right = Node(key)\n            return root\n        if key < value:\n            root.left = Node(key)\n            return root\n    value = root.val\n    if key > value:\n        value = root.right\n        return insert(value, key)\n    if key < value:\n        value = root.left\n        return insert(value, key)\n    \n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}]}}}
2021-02-26 12:07:50.693257,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    if root.left == None or root.right == None:\n        value = root.val\n        if key > value:\n            root.right = Node(key)\n            return root\n        if key < value:\n            root.left = Node(key)\n            return root\n    value = root.val\n    if key > value:\n        value = root.right\n        return insert(value, key)\n    if key < value:\n        value = root.left\n        return insert(value, key)\n    \n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}]}}}
2021-02-26 12:07:56.012225,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    if root.left == None or root.right == None:\n        value = root.val\n        if key > value:\n            root.right = Node(key)\n            return root\n        if key < value:\n            root.left = Node(key)\n            return root\n    value = root.val\n    if key > value:\n        value = root.right\n        return insert(value, key)\n    if key < value:\n        value = root.left\n        return insert(value, key)\n    \n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}]}}}
2021-02-26 12:10:40.112504,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    if root.left == None or root.right == None:\n        value = root.val\n        if key > value:\n            root.right = Node(key)\n            return root\n        if key < value:\n            root.left = Node(key)\n            return root\n    value = root.val\n    if key > value:\n        value = root.right\n        root.right = Node(insert(value, key))\n    if key < value:\n        value = root.left\n        root.left = Node(insert(value, key))\n    \n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}]}}}
2021-02-26 12:11:37.610882,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    if root.left == None or root.right == None:\n        value = root.val\n        if key > value:\n            root.right = Node(key)\n            return root\n        if key < value:\n            root.left = Node(key)\n            return root\n    value = root.val\n    if key > value:\n        value = root.right\n        return Node(insert(value, key))\n    if key < value:\n        value = root.left\n        return Node(insert(value, key))\n    \n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}]}}}
2021-02-26 12:11:49.109175,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    if root.left == None or root.right == None:\n        value = root.val\n        if key > value:\n            root.right = Node(key)\n            return root\n        if key < value:\n            root.left = Node(key)\n            return root\n    value = root.val\n    if key > value:\n        value = root.right\n        return insert(value, key)\n    if key < value:\n        value = root.left\n        return insert(value, key)\n    \n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}]}}}
2021-02-26 12:13:02.286707,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    if root.left == None or root.right == None:\n        value = root.val\n        if key > value:\n            root.right = Node(key)\n            return root\n        if key < value:\n            root.left = Node(key)\n            return root\n    value = root.val\n    if key > value:\n        root.right = insert(root.right, key)\n    if key < value:\n        value = root.left\n        root.left = insert(root.left, key)\n    \n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}]}}}
2021-02-26 12:13:03.495799,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    if root.left == None or root.right == None:\n        value = root.val\n        if key > value:\n            root.right = Node(key)\n            return root\n        if key < value:\n            root.left = Node(key)\n            return root\n    value = root.val\n    if key > value:\n        root.right = insert(root.right, key)\n    if key < value:\n        value = root.left\n        root.left = insert(root.left, key)\n    \n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}]}}}
2021-02-26 12:13:03.553243,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    if root.left == None or root.right == None:\n        value = root.val\n        if key > value:\n            root.right = Node(key)\n            return root\n        if key < value:\n            root.left = Node(key)\n            return root\n    value = root.val\n    if key > value:\n        root.right = insert(root.right, key)\n    if key < value:\n        value = root.left\n        root.left = insert(root.left, key)\n    \n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}]}}}
2021-02-26 12:13:03.743250,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    if root.left == None or root.right == None:\n        value = root.val\n        if key > value:\n            root.right = Node(key)\n            return root\n        if key < value:\n            root.left = Node(key)\n            return root\n    value = root.val\n    if key > value:\n        root.right = insert(root.right, key)\n    if key < value:\n        value = root.left\n        root.left = insert(root.left, key)\n    \n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}]}}}
2021-02-26 12:13:03.919363,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    if root.left == None or root.right == None:\n        value = root.val\n        if key > value:\n            root.right = Node(key)\n            return root\n        if key < value:\n            root.left = Node(key)\n            return root\n    value = root.val\n    if key > value:\n        root.right = insert(root.right, key)\n    if key < value:\n        value = root.left\n        root.left = insert(root.left, key)\n    \n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}]}}}
2021-02-26 12:13:03.988276,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    if root.left == None or root.right == None:\n        value = root.val\n        if key > value:\n            root.right = Node(key)\n            return root\n        if key < value:\n            root.left = Node(key)\n            return root\n    value = root.val\n    if key > value:\n        root.right = insert(root.right, key)\n    if key < value:\n        value = root.left\n        root.left = insert(root.left, key)\n    \n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}]}}}
2021-02-26 12:13:04.297477,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    if root.left == None or root.right == None:\n        value = root.val\n        if key > value:\n            root.right = Node(key)\n            return root\n        if key < value:\n            root.left = Node(key)\n            return root\n    value = root.val\n    if key > value:\n        root.right = insert(root.right, key)\n    if key < value:\n        value = root.left\n        root.left = insert(root.left, key)\n    \n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}]}}}
2021-02-26 12:14:24.420253,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    if root.left == None or root.right == None:\n        value = root.val\n        if key > value:\n            root.right = Node(key)\n            return root\n        if key < value:\n            root.left = Node(key)\n            return root\n    value = root.val\n    if key > value:\n        root.right.right = insert(root.right, key)\n    if key < value:\n        value = root.left\n        root.left.left = insert(root.left, key)\n    \n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}]}}}
2021-02-26 12:14:34.224006,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    if root.left == None or root.right == None:\n        value = root.val\n        if key > value:\n            root.right = Node(key)\n            return root\n        if key < value:\n            root.left = Node(key)\n            return root\n    value = root.val\n    if key > value:\n        root.right = insert(root.right, key)\n    if key < value:\n        value = root.left\n        root.left = insert(root.left, key)\n    \n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}]}}}
2021-02-26 12:14:50.398452,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    if root.left == None or root.right == None:\n        value = root.val\n        if key > value:\n            root.right = Node(key)\n            return root\n        if key < value:\n            root.left = Node(key)\n            return root\n    value = root.val\n    if key > value:\n        return insert(root.right, key)\n    if key < value:\n        value = root.left\n        return insert(root.left, key)\n    \n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}]}}}
2021-02-26 12:16:11.749168,insert,move-right,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    if root.left == None or root.right == None:\n        value = root.val\n        if key > value:\n            root.right = Node(key)\n            return root\n        if key < value:\n            root.left = Node(key)\n            return root\n    value = root.val\n    if key > value:\n        return insert(root.right, key)\n    if key < value:\n        value = root.left\n        return insert(root.left, key)\n    \n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}]}}}
2021-02-26 12:16:13.763531,insert,move-right,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    if root.left == None or root.right == None:\n        value = root.val\n        if key > value:\n            root.right = Node(key)\n            return root\n        if key < value:\n            root.left = Node(key)\n            return root\n    value = root.val\n    if key > value:\n        return insert(root.right, key)\n    if key < value:\n        value = root.left\n        return insert(root.left, key)\n    \n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}]}}}
2021-02-26 12:16:19.350843,insert,move-left,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    if root.left == None or root.right == None:\n        value = root.val\n        if key > value:\n            root.right = Node(key)\n            return root\n        if key < value:\n            root.left = Node(key)\n            return root\n    value = root.val\n    if key > value:\n        return insert(root.right, key)\n    if key < value:\n        value = root.left\n        return insert(root.left, key)\n    \n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}]}}}
2021-02-26 12:16:22.046820,insert,move-right,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    if root.left == None or root.right == None:\n        value = root.val\n        if key > value:\n            root.right = Node(key)\n            return root\n        if key < value:\n            root.left = Node(key)\n            return root\n    value = root.val\n    if key > value:\n        return insert(root.right, key)\n    if key < value:\n        value = root.left\n        return insert(root.left, key)\n    \n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}]}}}
2021-02-26 12:16:22.385807,insert,insert,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    if root.left == None or root.right == None:\n        value = root.val\n        if key > value:\n            root.right = Node(key)\n            return root\n        if key < value:\n            root.left = Node(key)\n            return root\n    value = root.val\n    if key > value:\n        return insert(root.right, key)\n    if key < value:\n        value = root.left\n        return insert(root.left, key)\n    \n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '4': [{'action': 'move-right', 'root': 7, 'key': 16}, {'action': 'move-right', 'root': 12, 'key': 16}, {'action': 'move-left', 'root': 15, 'key': 16}, {'action': 'move-right', 'root': 13, 'key': 16}, {'action': 'insert', 'root': -1, 'key': 16}]}}}
2021-02-26 12:17:58.429881,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    if root.left == None or root.right == None:\n        value = root.val\n        if key > value:\n            root.right = Node(key)\n        if key < value:\n            root.left = Node(key)\n    value = root.val\n    if key > value:\n        return insert(root.right, key)\n    if key < value:\n        value = root.left\n        return insert(root.left, key)\n    \n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '4': [{'action': 'move-right', 'root': 7, 'key': 16}, {'action': 'move-right', 'root': 12, 'key': 16}, {'action': 'move-left', 'root': 15, 'key': 16}, {'action': 'move-right', 'root': 13, 'key': 16}, {'action': 'insert', 'root': -1, 'key': 16}]}}}
2021-02-26 12:17:59.526287,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    if root.left == None or root.right == None:\n        value = root.val\n        if key > value:\n            root.right = Node(key)\n        if key < value:\n            root.left = Node(key)\n    value = root.val\n    if key > value:\n        return insert(root.right, key)\n    if key < value:\n        value = root.left\n        return insert(root.left, key)\n    \n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '4': [{'action': 'move-right', 'root': 7, 'key': 16}, {'action': 'move-right', 'root': 12, 'key': 16}, {'action': 'move-left', 'root': 15, 'key': 16}, {'action': 'move-right', 'root': 13, 'key': 16}, {'action': 'insert', 'root': -1, 'key': 16}]}}}
2021-02-26 12:22:54.898356,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    def helper(new_tree, key, root):\n        if new_tree.left == None or new_tree.right == None:\n            value = new_tree.val\n            if key > value:\n                root.right = Node(key)\n                return root\n            if key < value:\n                root.left = Node(key)\n                return root\n        value = root.val\n        if key > value:\n            return helper(new_tree.right, key, root)\n        if key < value:\n            value = new_tree.left\n            return insert(new_tree.left, key)\n    return helper(root, key, root)\n    \n    \n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '4': [{'action': 'move-right', 'root': 7, 'key': 16}, {'action': 'move-right', 'root': 12, 'key': 16}, {'action': 'move-left', 'root': 15, 'key': 16}, {'action': 'move-right', 'root': 13, 'key': 16}, {'action': 'insert', 'root': -1, 'key': 16}]}}}
2021-02-26 12:23:44.173504,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    def helper(new_tree, key, root):\n        if new_tree.left == None or new_tree.right == None:\n            value = new_tree.val\n            if key > value:\n                new_tree.right = Node(key)\n                return root\n            if key < value:\n                new_tree.left = Node(key)\n                return root\n        value = root.val\n        if key > value:\n            return helper(new_tree.right, key, root)\n        if key < value:\n            value = new_tree.left\n            return insert(new_tree.left, key)\n    return helper(root, key, root)\n    \n    \n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '4': [{'action': 'move-right', 'root': 7, 'key': 16}, {'action': 'move-right', 'root': 12, 'key': 16}, {'action': 'move-left', 'root': 15, 'key': 16}, {'action': 'move-right', 'root': 13, 'key': 16}, {'action': 'insert', 'root': -1, 'key': 16}]}}}
2021-02-26 12:23:54.436468,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    def helper(new_tree, key, root):\n        if new_tree.left == None or new_tree.right == None:\n            value = new_tree.val\n            if key > value:\n                new_tree.right = Node(key)\n                return root\n            if key < value:\n                new_tree.left = Node(key)\n                return root\n        value = root.val\n        if key > value:\n            return helper(new_tree.right, key, root)\n        if key < value:\n            value = new_tree.left\n            return insert(new_tree.left, key)\n    return helper(root, key, root)\n    \n    \n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '4': [{'action': 'move-right', 'root': 7, 'key': 16}, {'action': 'move-right', 'root': 12, 'key': 16}, {'action': 'move-left', 'root': 15, 'key': 16}, {'action': 'move-right', 'root': 13, 'key': 16}, {'action': 'insert', 'root': -1, 'key': 16}]}}}
2021-02-26 12:23:59.816932,insert,check-correct,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    def helper(new_tree, key, root):\n        if new_tree.left == None or new_tree.right == None:\n            value = new_tree.val\n            if key > value:\n                new_tree.right = Node(key)\n                return root\n            if key < value:\n                new_tree.left = Node(key)\n                return root\n        value = root.val\n        if key > value:\n            return helper(new_tree.right, key, root)\n        if key < value:\n            value = new_tree.left\n            return insert(new_tree.left, key)\n    return helper(root, key, root)\n    \n    \n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '4': [{'action': 'move-right', 'root': 7, 'key': 16}, {'action': 'move-right', 'root': 12, 'key': 16}, {'action': 'move-left', 'root': 15, 'key': 16}, {'action': 'move-right', 'root': 13, 'key': 16}, {'action': 'insert', 'root': -1, 'key': 16}]}}}
2021-02-26 12:24:17.759409,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    def helper(new_tree, key, root):\n        if new_tree.left == None or new_tree.right == None:\n            value = new_tree.val\n            if key > value:\n                new_tree.right = Node(key)\n                return root\n            if key < value:\n                new_tree.left = Node(key)\n                return root\n        value = root.val\n        if key > value:\n            return helper(new_tree.right, key, root)\n        if key < value:\n            value = new_tree.left\n            return insert(new_tree.left, key)\n    return helper(root, key, root)\n    \n    \n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '4': [{'action': 'move-right', 'root': 7, 'key': 16}, {'action': 'move-right', 'root': 12, 'key': 16}, {'action': 'move-left', 'root': 15, 'key': 16}, {'action': 'move-right', 'root': 13, 'key': 16}, {'action': 'insert', 'root': -1, 'key': 16}]}}}
2021-02-26 12:24:33.305234,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    def helper(new_tree, key, root):\n        if new_tree.left == None or new_tree.right == None:\n            value = new_tree.val\n            if key > value:\n                new_tree.right = Node(key)\n                return root\n            if key < value:\n                new_tree.left = Node(key)\n                return root\n        value = root.val\n        if key > value:\n            return helper(new_tree.right, key, root)\n        if key < value:\n            return insert(new_tree.left, key)\n    return helper(root, key, root)\n    \n    \n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '4': [{'action': 'move-right', 'root': 7, 'key': 16}, {'action': 'move-right', 'root': 12, 'key': 16}, {'action': 'move-left', 'root': 15, 'key': 16}, {'action': 'move-right', 'root': 13, 'key': 16}, {'action': 'insert', 'root': -1, 'key': 16}]}}}
2021-02-26 12:24:45.207893,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n    ', 'traces': {'0': [{'action': 'move-left', 'root': 8, 'key': 7}, {'action': 'move-right', 'root': 3, 'key': 7}, {'action': 'move-right', 'root': 6, 'key': 7}, {'action': 'return-true', 'root': 7, 'key': 7}], '1': [{'action': 'return-false', 'root': 7, 'key': 11}], '2': [{'action': 'move-left', 'root': 8, 'key': 5}, {'action': 'move-right', 'root': 3, 'key': 5}, {'action': 'move-left', 'root': 6, 'key': 5}, {'action': 'return-false', 'root': 4, 'key': 5}], '3': [{'action': 'move-right', 'root': 7, 'key': 11}, {'action': 'move-left', 'root': 12, 'key': 11}, {'action': 'move-right', 'root': 9, 'key': 11}, {'action': 'return-false', 'root': 10, 'key': 11}], '4': [{'action': 'move-right', 'root': 7, 'key': 10}, {'action': 'move-left', 'root': 12, 'key': 10}, {'action': 'move-right', 'root': 9, 'key': 10}, {'action': 'return-true', 'root': 10, 'key': 10}]}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\n\n#go to bottom of root (if root == None:)\n#insert where u can\ndef insert(root, key):\n    def helper(new_tree, key, root):\n        if new_tree.left == None or new_tree.right == None:\n            value = new_tree.val\n            if key > value:\n                new_tree.right = Node(key)\n                return root\n            if key < value:\n                new_tree.left = Node(key)\n                return root\n        value = root.val\n        if key > value:\n            return helper(new_tree.right, key, root)\n        if key < value:\n            return insert(new_tree.left, key)\n    return helper(root, key, root)\n    \n    \n\'\'\'\n    if root == None:\n        return False\n    value = root.val\n    if key == value:\n        return True\n    if key > value:\n        value = root.right\n        return search(value, key)\n    if key < value:\n        value = root.left\n        return search(value, key)\n        \'\'\'', 'traces': {'0': [{'action': 'move-left', 'root': 5, 'key': 6}, {'action': 'move-right', 'root': 3, 'key': 6}, {'action': 'move-right', 'root': 4, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '1': [{'action': 'move-left', 'root': 8, 'key': 2}, {'action': 'move-left', 'root': 3, 'key': 2}, {'action': 'move-right', 'root': 1, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '2': [{'action': 'move-right', 'root': 5, 'key': 6}, {'action': 'move-left', 'root': 7, 'key': 6}, {'action': 'insert', 'root': -1, 'key': 6}], '3': [{'action': 'move-left', 'root': 50, 'key': 2}, {'action': 'move-left', 'root': 17, 'key': 2}, {'action': 'move-left', 'root': 9, 'key': 2}, {'action': 'insert', 'root': -1, 'key': 2}], '4': [{'action': 'move-right', 'root': 7, 'key': 16}, {'action': 'move-right', 'root': 12, 'key': 16}, {'action': 'move-left', 'root': 15, 'key': 16}, {'action': 'move-right', 'root': 13, 'key': 16}, {'action': 'insert', 'root': -1, 'key': 16}]}}}
