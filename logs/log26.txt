2021-03-04 16:39:14.580031,page-change,1,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-04 16:44:55.626791,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    return searchHelper(root, key)\n\n\ndef searchHelper(currentRoot, key):\n    if currentRoot.val == key:\n        return true\n    elif key < currentRoot.val:\n        return searchHelper(currentRoot.left)\n    elif key > currentRoot.val:\n        return searchHelper(currentRoot.right)\n    else\n        return False\n    ', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-04 16:45:03.925851,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    return searchHelper(root, key)\n\n\ndef searchHelper(currentRoot, key):\n    if currentRoot.val == key:\n        return true\n    elif key < currentRoot.val:\n        return searchHelper(currentRoot.left)\n    elif key > currentRoot.val:\n        return searchHelper(currentRoot.right)\n    else:\n        return False\n    ', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-04 16:45:08.689633,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    return searchHelper(root, key)\n\n\ndef searchHelper(currentRoot, key):\n    if currentRoot.val == key:\n        return true\n    elif key < currentRoot.val:\n        return searchHelper(currentRoot.left)\n    elif key > currentRoot.val:\n        return searchHelper(currentRoot.right)\n    else:\n        return False\n    ', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-04 16:45:35.439539,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    return searchHelper(root, key)\n\n\ndef searchHelper(currentRoot, key):\n    if currentRoot.val == key:\n        return true\n    elif key < currentRoot.val:\n        return searchHelper(currentRoot.left)\n    elif key > currentRoot.val:\n        return searchHelper(currentRoot.right)\n    else:\n        return False\n    ', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-04 16:46:14.772533,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    def searchHelper(currentRoot, key):\n    if currentRoot.val == key:\n        return true\n    elif key < currentRoot.val:\n        return searchHelper(currentRoot.left)\n    elif key > currentRoot.val:\n        return searchHelper(currentRoot.right)\n    else:\n        return False\n    \n    \n    return searchHelper(root, key)\n\n\n\n\n    ', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-04 16:46:39.937740,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    def searchHelper(currentRoot, key):\n        if currentRoot.val == key:\n            return true\n        elif key < currentRoot.val:\n            return searchHelper(currentRoot.left)\n        elif key > currentRoot.val:\n            return searchHelper(currentRoot.right)\n        else:\n            return False\n    \n    \n    return searchHelper(root, key)\n\n\n\n\n    ', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-04 16:48:23.578075,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if root.val == key:\n        return true\n    elif key < root.val:\n        return search(root.left)\n    elif key > current.val:\n        return search(root.right)\n    else:\n        return False\n    \n    \n\n\n\n\n    ', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-04 16:48:28.741315,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if root.val == key:\n        return true\n    elif key < root.val:\n        return search(root.left)\n    elif key > current.val:\n        return search(root.right)\n    else:\n        return False\n    \n    \n\n\n\n\n    ', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-04 16:48:43.738502,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if root.val == key:\n        return true\n    elif key < root.val:\n        return search(root.left)\n    elif key > current.val:\n        return search(root.right)\n    else:\n        return False\n    \n    \n\n\n\n\n    ', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-04 16:48:58.668139,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if root.val == key:\n        return true\n    elif key < root.val:\n        return search(root.left)\n    elif key > root.val:\n        return search(root.right)\n    else:\n        return False\n    \n    \n\n\n\n\n    ', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-04 16:49:01.730261,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if root.val == key:\n        return true\n    elif key < root.val:\n        return search(root.left)\n    elif key > root.val:\n        return search(root.right)\n    else:\n        return False\n    \n    \n\n\n\n\n    ', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-04 16:49:08.448704,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if root.val == key:\n        return true\n    elif key < root.val:\n        return search(root.left)\n    elif key > root.val:\n        return search(root.right)\n    else:\n        return False\n    \n    \n\n\n\n\n    ', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-04 16:49:10.045411,search,check-correct,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if root.val == key:\n        return true\n    elif key < root.val:\n        return search(root.left)\n    elif key > root.val:\n        return search(root.right)\n    else:\n        return False\n    \n    \n\n\n\n\n    ', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-04 16:49:31.388588,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    def searchHelper(currentRoot, key):\n        if currentRoot.val == key:\n            return true\n        elif key < currentRoot.val:\n            return searchHelper(currentRoot.left)\n        elif key > currentRoot.val:\n            return searchHelper(currentRoot.right)\n        else:\n            return False\n    \n    \n    return searchHelper(root, key)\n\n\n\n\n    ', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-04 16:51:16.296145,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    return searchHelper(root, key)\n    def searchHelper(currentRoot, key):\n        if currentRoot.val == key:\n            return true\n        elif key < currentRoot.val:\n            return searchHelper(currentRoot.left)\n        elif key > currentRoot.val:\n            return searchHelper(currentRoot.right)\n        else:\n            return False\n    \n    \n\n\n\n\n\n    ', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-04 16:51:26.303273,search,check-correct,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    def searchHelper(currentRoot, key):\n        if currentRoot.val == key:\n            return true\n        elif key < currentRoot.val:\n            return searchHelper(currentRoot.left)\n        elif key > currentRoot.val:\n            return searchHelper(currentRoot.right)\n        else:\n            return False\n    \n    \n    return searchHelper(root, key)\n\n\n\n\n    ', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-04 16:51:27.667345,search,check-correct,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    def searchHelper(currentRoot, key):\n        if currentRoot.val == key:\n            return true\n        elif key < currentRoot.val:\n            return searchHelper(currentRoot.left)\n        elif key > currentRoot.val:\n            return searchHelper(currentRoot.right)\n        else:\n            return False\n    \n    \n    return searchHelper(root, key)\n\n\n\n\n    ', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-04 16:51:34.026684,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    def searchHelper(currentRoot, key):\n        if currentRoot.val == key:\n            return true\n        elif key < currentRoot.val:\n            return searchHelper(currentRoot.left)\n        elif key > currentRoot.val:\n            return searchHelper(currentRoot.right)\n        else:\n            return False\n    \n    \n    return searchHelper(root, key)\n\n\n\n\n    ', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-04 16:51:42.778591,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    def searchHelper(currentRoot, key):\n        if currentRoot.val == key:\n            return true\n        elif key < currentRoot.val:\n            return searchHelper(currentRoot.left)\n        elif key > currentRoot.val:\n            return searchHelper(currentRoot.right)\n        else:\n            return False\n    \n    \n    return searchHelper(root, 3)\n\n\n\n\n    ', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-04 16:51:45.816495,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    def searchHelper(currentRoot, key):\n        if currentRoot.val == key:\n            return true\n        elif key < currentRoot.val:\n            return searchHelper(currentRoot.left)\n        elif key > currentRoot.val:\n            return searchHelper(currentRoot.right)\n        else:\n            return False\n    \n    \n    return searchHelper(root, 3)\n\n\n\n\n    ', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-04 16:51:46.058067,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    def searchHelper(currentRoot, key):\n        if currentRoot.val == key:\n            return true\n        elif key < currentRoot.val:\n            return searchHelper(currentRoot.left)\n        elif key > currentRoot.val:\n            return searchHelper(currentRoot.right)\n        else:\n            return False\n    \n    \n    return searchHelper(root, 3)\n\n\n\n\n    ', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-04 16:51:46.215416,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    def searchHelper(currentRoot, key):\n        if currentRoot.val == key:\n            return true\n        elif key < currentRoot.val:\n            return searchHelper(currentRoot.left)\n        elif key > currentRoot.val:\n            return searchHelper(currentRoot.right)\n        else:\n            return False\n    \n    \n    return searchHelper(root, 3)\n\n\n\n\n    ', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-04 16:51:46.592200,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    def searchHelper(currentRoot, key):\n        if currentRoot.val == key:\n            return true\n        elif key < currentRoot.val:\n            return searchHelper(currentRoot.left)\n        elif key > currentRoot.val:\n            return searchHelper(currentRoot.right)\n        else:\n            return False\n    \n    \n    return searchHelper(root, 3)\n\n\n\n\n    ', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-04 16:51:46.856160,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    def searchHelper(currentRoot, key):\n        if currentRoot.val == key:\n            return true\n        elif key < currentRoot.val:\n            return searchHelper(currentRoot.left)\n        elif key > currentRoot.val:\n            return searchHelper(currentRoot.right)\n        else:\n            return False\n    \n    \n    return searchHelper(root, 3)\n\n\n\n\n    ', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-04 16:51:47.216808,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    def searchHelper(currentRoot, key):\n        if currentRoot.val == key:\n            return true\n        elif key < currentRoot.val:\n            return searchHelper(currentRoot.left)\n        elif key > currentRoot.val:\n            return searchHelper(currentRoot.right)\n        else:\n            return False\n    \n    \n    return searchHelper(root, 3)\n\n\n\n\n    ', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-04 16:51:49.920247,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    def searchHelper(currentRoot, key):\n        if currentRoot.val == key:\n            return true\n        elif key < currentRoot.val:\n            return searchHelper(currentRoot.left)\n        elif key > currentRoot.val:\n            return searchHelper(currentRoot.right)\n        else:\n            return False\n    \n    \n    return searchHelper(root, 3)\n\n\n\n\n    ', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-04 16:52:21.671661,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    def searchHelper(currentRoot, key):\n        if currentRoot.val == key:\n            return true\n        elif key < currentRoot.val:\n            return searchHelper(currentRoot.left, key)\n        elif key > currentRoot.val:\n            return searchHelper(currentRoot.right, key)\n        else:\n            return False\n    \n    \n    return searchHelper(root, key)\n\n\n\n\n    ', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-04 16:53:03.417569,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    def searchHelper(currentRoot, key):\n        if currentRoot = None:\n            return False\n        elif currentRoot.val == key:\n            return true\n        elif key < currentRoot.val:\n            return searchHelper(currentRoot.left, key)\n        elif key > currentRoot.val:\n            return searchHelper(currentRoot.right, key)\n        else:\n            return False\n    \n    \n    return searchHelper(root, key)\n\n\n\n\n    ', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-04 16:53:11.230141,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    def searchHelper(currentRoot, key):\n        if currentRoot == None:\n            return False\n        elif currentRoot.val == key:\n            return true\n        elif key < currentRoot.val:\n            return searchHelper(currentRoot.left, key)\n        elif key > currentRoot.val:\n            return searchHelper(currentRoot.right, key)\n        else:\n            return False\n    \n    \n    return searchHelper(root, key)\n\n\n\n\n    ', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-04 16:53:25.625718,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    def searchHelper(currentRoot, key):\n        if currentRoot == None:\n            return False\n        elif currentRoot.val == key:\n            return True\n        elif key < currentRoot.val:\n            return searchHelper(currentRoot.left, key)\n        elif key > currentRoot.val:\n            return searchHelper(currentRoot.right, key)\n        else:\n            return False\n    \n    \n    return searchHelper(root, key)\n\n\n\n\n    ', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-04 16:53:30.260556,search,check-correct,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    def searchHelper(currentRoot, key):\n        if currentRoot == None:\n            return False\n        elif currentRoot.val == key:\n            return True\n        elif key < currentRoot.val:\n            return searchHelper(currentRoot.left, key)\n        elif key > currentRoot.val:\n            return searchHelper(currentRoot.right, key)\n        else:\n            return False\n    \n    \n    return searchHelper(root, key)\n\n\n\n\n    ', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-04 16:53:31.741706,page-change,2,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    def searchHelper(currentRoot, key):\n        if currentRoot == None:\n            return False\n        elif currentRoot.val == key:\n            return True\n        elif key < currentRoot.val:\n            return searchHelper(currentRoot.left, key)\n        elif key > currentRoot.val:\n            return searchHelper(currentRoot.right, key)\n        else:\n            return False\n    \n    \n    return searchHelper(root, key)\n\n\n\n\n    ', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-04 16:57:08.952004,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    def searchHelper(currentRoot, key):\n        if currentRoot == None:\n            return False\n        elif currentRoot.val == key:\n            return True\n        elif key < currentRoot.val:\n            return searchHelper(currentRoot.left, key)\n        elif key > currentRoot.val:\n            return searchHelper(currentRoot.right, key)\n        else:\n            return False\n    \n    \n    return searchHelper(root, key)\n\n\n\n\n    ', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n     \n    \n    def insertHelper(currentNode, key):\n        if key < currentNode.val:\n            return insertHelper(currentNode.left, key)\n        elif key > currentNode.val:\n            return insertHelper(currentNode.right, key)\n        else\n            currentNode.val = key\n            return currentNode\n    root = insertHelper(root, key)\n    return root', 'traces': {}}}
2021-03-04 16:57:16.723559,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    def searchHelper(currentRoot, key):\n        if currentRoot == None:\n            return False\n        elif currentRoot.val == key:\n            return True\n        elif key < currentRoot.val:\n            return searchHelper(currentRoot.left, key)\n        elif key > currentRoot.val:\n            return searchHelper(currentRoot.right, key)\n        else:\n            return False\n    \n    \n    return searchHelper(root, key)\n\n\n\n\n    ', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n     \n    \n    def insertHelper(currentNode, key):\n        if key < currentNode.val:\n            return insertHelper(currentNode.left, key)\n        elif key > currentNode.val:\n            return insertHelper(currentNode.right, key)\n        else:\n            currentNode.val = key\n            return currentNode\n    root = insertHelper(root, key)\n    return root', 'traces': {}}}
2021-03-04 16:58:22.550776,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    def searchHelper(currentRoot, key):\n        if currentRoot == None:\n            return False\n        elif currentRoot.val == key:\n            return True\n        elif key < currentRoot.val:\n            return searchHelper(currentRoot.left, key)\n        elif key > currentRoot.val:\n            return searchHelper(currentRoot.right, key)\n        else:\n            return False\n    \n    \n    return searchHelper(root, key)\n\n\n\n\n    ', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    def insertHelper(currentNode, key):\n        if currentNode == None:\n            return Node(val)\n        if key < currentNode.val:\n            return insertHelper(currentNode.left, key)\n        elif key > currentNode.val:\n            return insertHelper(currentNode.right, key)\n        else:\n            currentNode.val = key\n            return currentNode\n    root = insertHelper(root, key)\n    return root', 'traces': {}}}
2021-03-04 16:58:29.924960,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    def searchHelper(currentRoot, key):\n        if currentRoot == None:\n            return False\n        elif currentRoot.val == key:\n            return True\n        elif key < currentRoot.val:\n            return searchHelper(currentRoot.left, key)\n        elif key > currentRoot.val:\n            return searchHelper(currentRoot.right, key)\n        else:\n            return False\n    \n    \n    return searchHelper(root, key)\n\n\n\n\n    ', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    def insertHelper(currentNode, key):\n        if currentNode == None:\n            return Node(key)\n        if key < currentNode.val:\n            return insertHelper(currentNode.left, key)\n        elif key > currentNode.val:\n            return insertHelper(currentNode.right, key)\n        else:\n            currentNode.val = key\n            return currentNode\n    root = insertHelper(root, key)\n    return root', 'traces': {}}}
2021-03-04 17:00:33.133484,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    def searchHelper(currentRoot, key):\n        if currentRoot == None:\n            return False\n        elif currentRoot.val == key:\n            return True\n        elif key < currentRoot.val:\n            return searchHelper(currentRoot.left, key)\n        elif key > currentRoot.val:\n            return searchHelper(currentRoot.right, key)\n        else:\n            return False\n    \n    \n    return searchHelper(root, key)\n\n\n\n\n    ', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    def insertHelper(currentNode, key):\n        if currentNode == None:\n            return Node(key)\n        if key < currentNode.val:\n            currentNode.left = insertHelper(currentNode.left, key)\n        elif key > currentNode.val:\n            currentNode.right insertHelper(currentNode.right, key)\n        else:\n            currentNode.val = key\n            return currentNode\n    root = insertHelper(root, key)\n    return root', 'traces': {}}}
2021-03-04 17:00:39.957566,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    def searchHelper(currentRoot, key):\n        if currentRoot == None:\n            return False\n        elif currentRoot.val == key:\n            return True\n        elif key < currentRoot.val:\n            return searchHelper(currentRoot.left, key)\n        elif key > currentRoot.val:\n            return searchHelper(currentRoot.right, key)\n        else:\n            return False\n    \n    \n    return searchHelper(root, key)\n\n\n\n\n    ', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    def insertHelper(currentNode, key):\n        if currentNode == None:\n            return Node(key)\n        if key < currentNode.val:\n            currentNode.left = insertHelper(currentNode.left, key)\n        elif key > currentNode.val:\n            currentNode.right = insertHelper(currentNode.right, key)\n        else:\n            currentNode.val = key\n            return currentNode\n    root = insertHelper(root, key)\n    return root', 'traces': {}}}
2021-03-04 17:02:50.569786,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    def searchHelper(currentRoot, key):\n        if currentRoot == None:\n            return False\n        elif currentRoot.val == key:\n            return True\n        elif key < currentRoot.val:\n            return searchHelper(currentRoot.left, key)\n        elif key > currentRoot.val:\n            return searchHelper(currentRoot.right, key)\n        else:\n            return False\n    \n    \n    return searchHelper(root, key)\n\n\n\n\n    ', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    if root == None:\n        return Node(key)\n    if key < root.val:\n        root.left = insert(root.left, key)\n    elif key > root.val:\n        root.right = insert(root.right, key)\n    else:\n        root.val = key\n    \n    return root', 'traces': {}}}
2021-03-04 17:02:59.711186,insert,check-correct,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    def searchHelper(currentRoot, key):\n        if currentRoot == None:\n            return False\n        elif currentRoot.val == key:\n            return True\n        elif key < currentRoot.val:\n            return searchHelper(currentRoot.left, key)\n        elif key > currentRoot.val:\n            return searchHelper(currentRoot.right, key)\n        else:\n            return False\n    \n    \n    return searchHelper(root, key)\n\n\n\n\n    ', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    if root == None:\n        return Node(key)\n    if key < root.val:\n        root.left = insert(root.left, key)\n    elif key > root.val:\n        root.right = insert(root.right, key)\n    else:\n        root.val = key\n    \n    return root', 'traces': {}}}
2021-03-04 17:03:02.707867,page-change,3,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    def searchHelper(currentRoot, key):\n        if currentRoot == None:\n            return False\n        elif currentRoot.val == key:\n            return True\n        elif key < currentRoot.val:\n            return searchHelper(currentRoot.left, key)\n        elif key > currentRoot.val:\n            return searchHelper(currentRoot.right, key)\n        else:\n            return False\n    \n    \n    return searchHelper(root, key)\n\n\n\n\n    ', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    if root == None:\n        return Node(key)\n    if key < root.val:\n        root.left = insert(root.left, key)\n    elif key > root.val:\n        root.right = insert(root.right, key)\n    else:\n        root.val = key\n    \n    return root', 'traces': {}}}
