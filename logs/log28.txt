2021-03-05 10:09:33.340791,page-change,1,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:13:19.352420,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root == key):\n        return true\n    else if (key > root && root.right != null):\n        return search(root.right, key)\n    else if (key < root && root.left != null):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:14:04.393868,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root.val == key):\n        return true\n    else if (key > root.val && root.right != null):\n        return search(root.right, key)\n    else if (key < root.val && root.left != null):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:14:07.040912,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root.val == key):\n        return true\n    else if (key > root.val && root.right != null):\n        return search(root.right, key)\n    else if (key < root.val && root.left != null):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:14:43.341659,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root.val == key):\n        return true\n    else if (key > root.val and root.right != null):\n        return search(root.right, key)\n    else if (key < root.val and root.left != null):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:14:47.514478,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root.val == key):\n        return true\n    else if (key > root.val and root.right != null):\n        return search(root.right, key)\n    else if (key < root.val and root.left != null):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:14:59.957353,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root.val == key):\n        return true\n    else if (key > root.val and root.right != null):\n        return search(root.right, key)\n    else if (key < root.val and root.left != null):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:15:11.760956,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root.val == key):\n        return true\n    else if (key > root.val and root.right != null):\n        return search(root.right, key)\n    else if (key < root.val and root.left != null):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:15:16.313292,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root.val == key):\n        return true\n    else if (key > root.val and root.right != null):\n        return search(root.right, key)\n    else if (key < root.val and root.left != null):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:15:30.428086,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root.val == key):\n        return true\n    else if (key > root.val and root.right != None):\n        return search(root.right, key)\n    else if (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:15:35.990942,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root.val == key):\n        return true\n    else if (key > root.val and root.right != None):\n        return search(root.right, key)\n    else if (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:15:44.164609,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root.val == key):\n        return true\n    else if (key > root and root.right != None):\n        return search(root.right, key)\n    else if (key < root and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:16:08.227553,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root.val == key):\n        return true\n    elif (key > root and root.right != None):\n        return search(root.right, key)\n    elif (key < root and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:16:20.672110,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root.val == key):\n        return true\n    elif (key > root.val and root.right != None):\n        return search(root.right, key)\n    elif (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:16:26.532530,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root.val == key):\n        return True\n    elif (key > root.val and root.right != None):\n        return search(root.right, key)\n    elif (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:16:35.540862,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root.val == key):\n        return True\n    elif (key > root.val and root.right != None):\n        return search(root.right, key)\n    elif (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:16:42.604661,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root.val == key):\n        return True\n    elif (key > root.val and root.right != None):\n        return search(root.right, key)\n    elif (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:16:50.652514,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root.val == key):\n        return True\n    elif (key > root.val and root.right != None):\n        return search(root.right, key)\n    elif (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:16:52.286788,search,check-correct,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root.val == key):\n        return True\n    elif (key > root.val and root.right != None):\n        return search(root.right, key)\n    elif (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:17:06.017087,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root.val == key):\n        return True\n    elif (key > root.val and root.right != None):\n        return search(root.right, key)\n    elif (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:17:14.807795,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root.val == key):\n        return True\n    elif (key > root.val and root.right != None):\n        return search(root.right, key)\n    elif (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:17:17.708387,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root.val == key):\n        return True\n    elif (key > root.val and root.right != None):\n        return search(root.right, key)\n    elif (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:17:20.856596,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root.val == key):\n        return True\n    elif (key > root.val and root.right != None):\n        return search(root.right, key)\n    elif (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:17:24.989965,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root.val == key):\n        return True\n    elif (key > root.val and root.right != None):\n        return search(root.right, key)\n    elif (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:17:28.968924,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root.val == key):\n        return True\n    elif (key > root.val and root.right != None):\n        return search(root.right, key)\n    elif (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:17:32.101287,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root.val == key):\n        return True\n    elif (key > root.val and root.right != None):\n        return search(root.right, key)\n    elif (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:17:35.203767,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root.val == key):\n        return True\n    elif (key > root.val and root.right != None):\n        return search(root.right, key)\n    elif (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:17:43.527598,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root.val == key):\n        return True\n    elif (key > root.val and root.right != None):\n        return search(root.right, key)\n    elif (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:17:47.949108,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root.val == key):\n        return True\n    elif (key > root.val and root.right != None):\n        return search(root.right, key)\n    elif (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:17:52.104497,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root.val == key):\n        return True\n    elif (key > root.val and root.right != None):\n        return search(root.right, key)\n    elif (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:17:55.307467,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root.val == key):\n        return True\n    elif (key > root.val and root.right != None):\n        return search(root.right, key)\n    elif (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:17:58.720471,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root.val == key):\n        return True\n    elif (key > root.val and root.right != None):\n        return search(root.right, key)\n    elif (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:18:02.224168,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root.val == key):\n        return True\n    elif (key > root.val and root.right != None):\n        return search(root.right, key)\n    elif (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:18:05.145464,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root.val == key):\n        return True\n    elif (key > root.val and root.right != None):\n        return search(root.right, key)\n    elif (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:18:08.646027,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root.val == key):\n        return True\n    elif (key > root.val and root.right != None):\n        return search(root.right, key)\n    elif (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:18:12.862451,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root.val == key):\n        return True\n    elif (key > root.val and root.right != None):\n        return search(root.right, key)\n    elif (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:18:16.912824,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root.val == key):\n        return True\n    elif (key > root.val and root.right != None):\n        return search(root.right, key)\n    elif (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:18:20.721754,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root.val == key):\n        return True\n    elif (key > root.val and root.right != None):\n        return search(root.right, key)\n    elif (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:18:24.519944,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root.val == key):\n        return True\n    elif (key > root.val and root.right != None):\n        return search(root.right, key)\n    elif (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:18:28.605242,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root.val == key):\n        return True\n    elif (key > root.val and root.right != None):\n        return search(root.right, key)\n    elif (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:18:31.905168,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root.val == key):\n        return True\n    elif (key > root.val and root.right != None):\n        return search(root.right, key)\n    elif (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:18:35.759336,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root.val == key):\n        return True\n    elif (key > root.val and root.right != None):\n        return search(root.right, key)\n    elif (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:18:42.912359,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root.val == key):\n        return True\n    elif (key > root.val and root.right != None):\n        return search(root.right, key)\n    elif (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:18:46.321660,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root.val == key):\n        return True\n    elif (key > root.val and root.right != None):\n        return search(root.right, key)\n    elif (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:18:49.065488,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root.val == key):\n        return True\n    elif (key > root.val and root.right != None):\n        return search(root.right, key)\n    elif (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:20:30.620237,search,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if (root == None) :\n        return False\n    elif (root.val == key):\n        return True\n    elif (key > root.val and root.right != None):\n        return search(root.right, key)\n    elif (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:20:33.482992,search,check-correct,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if (root == None) :\n        return False\n    elif (root.val == key):\n        return True\n    elif (key > root.val and root.right != None):\n        return search(root.right, key)\n    elif (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:20:36.294438,page-change,2,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if (root == None) :\n        return False\n    elif (root.val == key):\n        return True\n    elif (key > root.val and root.right != None):\n        return search(root.right, key)\n    elif (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    return root', 'traces': {}}}
2021-03-05 10:25:20.895396,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if (root == None) :\n        return False\n    elif (root.val == key):\n        return True\n    elif (key > root.val and root.right != None):\n        return search(root.right, key)\n    elif (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root == None):\n        root = Node(key)\n    elif (key > root.val):\n        return insert(root.right, key)\n    elif (key < root.val):\n        return insert(root.left, key)\n    return root', 'traces': {}}}
2021-03-05 10:24:47.262866,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if (root == None) :\n        return False\n    elif (root.val == key):\n        return True\n    elif (key > root.val and root.right != None):\n        return search(root.right, key)\n    elif (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root == None):\n        root = Node(key)\n    elif (key > root.val):\n        return insert(root.right, key)\n    elif (key < root.val):\n        return insert(root.left, key)\n    return root', 'traces': {}}}
2021-03-05 10:25:00.854295,insert,check-correct,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if (root == None) :\n        return False\n    elif (root.val == key):\n        return True\n    elif (key > root.val and root.right != None):\n        return search(root.right, key)\n    elif (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root == None):\n        root = Node(key)\n    elif (key > root.val):\n        return insert(root.right, key)\n    elif (key < root.val):\n        return insert(root.left, key)\n    return root', 'traces': {}}}
2021-03-05 10:25:34.726333,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if (root == None) :\n        return False\n    elif (root.val == key):\n        return True\n    elif (key > root.val and root.right != None):\n        return search(root.right, key)\n    elif (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root == None):\n        root = Node(key)\n    elif (key > root.val):\n        print(root.val)\n        return insert(root.right, key)\n    elif (key < root.val):\n        print(root.val)\n        return insert(root.left, key)\n    return root', 'traces': {}}}
2021-03-05 10:27:18.095345,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if (root == None) :\n        return False\n    elif (root.val == key):\n        return True\n    elif (key > root.val and root.right != None):\n        return search(root.right, key)\n    elif (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root == None):\n        root = Node(key)\n    elif (key > root.val):\n        print(root.val)\n        if (root.right == None):\n            root.right = Node(key)\n        else:\n            return insert(root.right, key)\n    elif (key < root.val):\n        print(root.val)\n        if (root.left == None):\n            root.left = Node(key)\n        else:\n            return insert(root.left, key)\n    return root', 'traces': {}}}
2021-03-05 10:28:14.523149,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if (root == None) :\n        return False\n    elif (root.val == key):\n        return True\n    elif (key > root.val and root.right != None):\n        return search(root.right, key)\n    elif (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root == None):\n        root = Node(key)\n    elif (key > root.val):\n        print(root.val)\n        if (root.right == None):\n            root.right = Node(key)\n        else:\n            root = insert(root.right, key)\n    elif (key < root.val):\n        print(root.val)\n        if (root.left == None):\n            root.left = Node(key)\n        else:\n            root = insert(root.left, key)\n    return root', 'traces': {}}}
2021-03-05 10:28:15.768237,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if (root == None) :\n        return False\n    elif (root.val == key):\n        return True\n    elif (key > root.val and root.right != None):\n        return search(root.right, key)\n    elif (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    if (root == None):\n        root = Node(key)\n    elif (key > root.val):\n        print(root.val)\n        if (root.right == None):\n            root.right = Node(key)\n        else:\n            root = insert(root.right, key)\n    elif (key < root.val):\n        print(root.val)\n        if (root.left == None):\n            root.left = Node(key)\n        else:\n            root = insert(root.left, key)\n    return root', 'traces': {}}}
2021-03-05 10:35:15.335782,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if (root == None) :\n        return False\n    elif (root.val == key):\n        return True\n    elif (key > root.val and root.right != None):\n        return search(root.right, key)\n    elif (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    baseNode = root\n    found = False;\n    while(not found):\n        elif (key > root.val):\n            if (root.right == None):\n                root.right = Node(key)\n                found = True\n            else:\n                root = root.right\n    \n        elif (key < root.val):\n            if (root.left == None):\n                root.left = Node(key)\n                found = True\n            else:\n                root = root.left\n    return baseNode\n    #\n    #if (root == None):\n        #root = Node(key)\n   # elif (key > root.val):\n       # print(root.val)\n       # if (root.right == None):\n      #      root.right = Node(key)\n     #   else:\n     #       root = insert(root.right, key)\n   # elif (key < root.val):\n    #    print(root.val)\n     #   if (root.left == None):\n     #       root.left = Node(key)\n     #   else:\n     #       root = insert(root.left, key)\n  #  return root\n', 'traces': {}}}
2021-03-05 10:35:26.311446,insert,run,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if (root == None) :\n        return False\n    elif (root.val == key):\n        return True\n    elif (key > root.val and root.right != None):\n        return search(root.right, key)\n    elif (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    baseNode = root\n    found = False;\n    while(not found):\n        if (key > root.val):\n            if (root.right == None):\n                root.right = Node(key)\n                found = True\n            else:\n                root = root.right\n    \n        elif (key < root.val):\n            if (root.left == None):\n                root.left = Node(key)\n                found = True\n            else:\n                root = root.left\n    return baseNode\n    #\n    #if (root == None):\n        #root = Node(key)\n   # elif (key > root.val):\n       # print(root.val)\n       # if (root.right == None):\n      #      root.right = Node(key)\n     #   else:\n     #       root = insert(root.right, key)\n   # elif (key < root.val):\n    #    print(root.val)\n     #   if (root.left == None):\n     #       root.left = Node(key)\n     #   else:\n     #       root = insert(root.left, key)\n  #  return root\n', 'traces': {}}}
2021-03-05 10:35:37.793366,insert,check-correct,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if (root == None) :\n        return False\n    elif (root.val == key):\n        return True\n    elif (key > root.val and root.right != None):\n        return search(root.right, key)\n    elif (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    baseNode = root\n    found = False;\n    while(not found):\n        if (key > root.val):\n            if (root.right == None):\n                root.right = Node(key)\n                found = True\n            else:\n                root = root.right\n    \n        elif (key < root.val):\n            if (root.left == None):\n                root.left = Node(key)\n                found = True\n            else:\n                root = root.left\n    return baseNode\n    #\n    #if (root == None):\n        #root = Node(key)\n   # elif (key > root.val):\n       # print(root.val)\n       # if (root.right == None):\n      #      root.right = Node(key)\n     #   else:\n     #       root = insert(root.right, key)\n   # elif (key < root.val):\n    #    print(root.val)\n     #   if (root.left == None):\n     #       root.left = Node(key)\n     #   else:\n     #       root = insert(root.left, key)\n  #  return root\n', 'traces': {}}}
2021-03-05 10:35:39.077725,insert,check-correct,{'search': {'code': '# Returns True if "key" can be found in the given binary search tree ("root").\n# Otherwise, returns False.\ndef search(root, key):\n    if (root == None) :\n        return False\n    elif (root.val == key):\n        return True\n    elif (key > root.val and root.right != None):\n        return search(root.right, key)\n    elif (key < root.val and root.left != None):\n        return search(root.left, key)\n    else:\n        return False', 'traces': {}}, 'insert': {'code': '# Inserts a new node with the value "key" into the given binary search tree ("root").\n# You can assume "key" does not appear in "root".\ndef insert(root, key):\n    # vvvvv Write your code here. vvvvv\n    baseNode = root\n    found = False;\n    while(not found):\n        if (key > root.val):\n            if (root.right == None):\n                root.right = Node(key)\n                found = True\n            else:\n                root = root.right\n    \n        elif (key < root.val):\n            if (root.left == None):\n                root.left = Node(key)\n                found = True\n            else:\n                root = root.left\n    return baseNode\n    #\n    #if (root == None):\n        #root = Node(key)\n   # elif (key > root.val):\n       # print(root.val)\n       # if (root.right == None):\n      #      root.right = Node(key)\n     #   else:\n     #       root = insert(root.right, key)\n   # elif (key < root.val):\n    #    print(root.val)\n     #   if (root.left == None):\n     #       root.left = Node(key)\n     #   else:\n     #       root = insert(root.left, key)\n  #  return root\n', 'traces': {}}}
